version: '3.8'

services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: fusionclinic-db
    environment:
      POSTGRES_DB: fusionclinic
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    networks:
      - fusionclinic-network
    # --- ADICIONADO HEALTHCHECK ---
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d fusionclinic"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  api:
    build: .
    container_name: fusionclinic-api
    environment:
      NODE_ENV: development
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: fusionclinic
      DB_USER: postgres
      DB_PASSWORD: postgres123
      JWT_SECRET: your_super_secret_jwt_key_change_in_production
      FRONTEND_URL: http://localhost:3000
    ports:
      - "3001:3001"
    depends_on:
      # --- CONDIÇÃO DE DEPENDÊNCIA ATUALIZADA ---
      postgres:
        condition: service_healthy
    volumes:
      - ./src:/app/src
    networks:
      - fusionclinic-network
    restart: unless-stopped

  # Redis para cache (opcional)
  redis:
    image: redis:7-alpine
    container_name: fusionclinic-redis
    ports:
      - "6379:6379"
    networks:
      - fusionclinic-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  fusionclinic-network:
    driver: bridge